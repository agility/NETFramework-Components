@using Agility.Components.Blog.Classes
@using Agility.Web.Components
@using Agility.Components.Blog.ViewModels
@model BlogAuthorViewModel

<div class="agility-blg-author-details-module">

    <h1>@Html.Raw(Model.Author["Title"] as string)</h1>
    @if (!string.IsNullOrEmpty(Model.Author["SubTitle"] as string))
    {
        <h4 class="agility-blg-subtitle">
            @Html.Raw(Model.Author["SubTitle"] as string)
        </h4>
    }

    <div class="agility-row">
        <div class="agility-blg-author-image-container agility-col-xs-3">
            @Html.Partial(AgilityComponents.TemplatePath("Blog-AuthorImage"), new BlogAuthorImageViewModel()
        {
            Configuration = Model.Configuration,
            Author = Model.Author,
            Height = 140,
            Width = 140
        })
        </div>

        <div class="agility-blg-author-bio-textblob agility-col-xs-9">
            @Html.Raw(Model.Author["Textblob"] as string)
        </div>
    </div>
    

    @if (Model.Posts != null && Model.Posts.Any())
    {
        <div class="agility-blg-author-post-listing">

            <h2>@Model.Module["RecentBlogPostsLabel"] @Html.Raw(Model.Author["Title"] as string)</h2>

            @foreach (var p in Model.Posts)
            {
                @Html.Partial(AgilityComponents.TemplatePath("Blog-ListedPost"), new PostViewModel()
                {
                    Post = p,
                    Configuration = Model.Configuration
                })
            }

            @Html.Partial(AgilityComponents.TemplatePath("Blog-Pagination"), Model.Pagination)
        </div>
    }
    
</div>
