@using Agility.Components.Blog.Classes
@using Agility.Components.Blog.ViewModels
@model BlogPaginationViewModel

@helper BuildPagerLink(int pageNum, string label, string title)
{
    string href = "";
    string className = "";
    if (pageNum == 0 || pageNum > Model.NumberOfPages)
    {
        href = "javascript:;";
        className = Model.DisabledClass;
    }
    else
    {
        href = BlogUtils.GetPagedUrl(Model.QueryStringParam, pageNum, false);
    }

    if (pageNum == Model.Page)
    {
        className = Model.ActiveClass;
    }
    
    <a href="@href" class="@className" title="@title">@Html.Raw(label)</a>
}

@helper BuildNextPreviousPagerLink(bool next)
{
    int pageNum = 1;
    string label = "";
    string title = "";
    if (next)
    {
        label = "<span aria-hidden=\"true\">&raquo;</span>";
        pageNum = Model.Page + 1;
        title = Model.NextLabel;
    }
    else
    {
        label = "<span aria-hidden=\"true\">&laquo;</span>";
        pageNum = Model.Page - 1;
        title = Model.PreviousLabel;
    }

    @BuildPagerLink(pageNum, label, title)
}

@if (Model != null && Model.NumberOfPages > 1) { 

    <div class="agility-pagination-container">

        <ul class="agility-pagination">
            @{
                bool isLastPage;
                bool isFirstPage;
            }
            <li>
                @BuildNextPreviousPagerLink(false)
            </li>

            @for (var i = 1; i < (Model.NumberOfPages + 1); i++)
            {
                isFirstPage = (Model.ShowLastPage && i == 1);
                isLastPage = (Model.ShowLastPage && i == Model.NumberOfPages);
                if (isLastPage || isFirstPage || i >= Model.StartRangeIndex && i <= Model.EndRangeIndex)
                {
                    if (isLastPage && i >= Model.EndRangeIndex)
                    {
                        <li>
                            &#8230;
                        </li>
                    }

                    <li>
                        @BuildPagerLink(i, i.ToString(), i.ToString())
                    </li>

                    if (isFirstPage && i < Model.StartRangeIndex)
                    {
                        <li>
                            &#8230;
                        </li>
                    }
                }
            }
            <li>
                @BuildNextPreviousPagerLink(true)
            </li>
        </ul>
    </div>
}